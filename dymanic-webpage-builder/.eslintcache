[{"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\index.js":"1","D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\reportWebVitals.js":"2","D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\App.js":"3","D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\components\\index.js":"4","D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\components\\Navbar.js":"5","D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\components\\DynamicForm\\index.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":291,"mtime":1610378599688,"results":"10","hashOfConfig":"8"},{"size":2383,"mtime":1610470411269,"results":"11","hashOfConfig":"8"},{"size":1737,"mtime":1610435612926,"results":"12","hashOfConfig":"8"},{"size":3367,"mtime":1610448298759,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ac5mlv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\index.js",[],["29","30"],"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\reportWebVitals.js",[],"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\App.js",[],"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\components\\index.js",[],"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\components\\Navbar.js",[],"D:\\Repo\\dynamic-webpage-builder\\dymanic-webpage-builder\\src\\components\\DynamicForm\\index.js",["31","32","33","34","35","36"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./form.css\";\n\nlet ActionDisplay =\"\";\n\nexport default class DynamicForm extends React.Component {\n  state = {};\n  constructor(props) {\n    super(props);\n  }\n\n  renderForm = () => {\n    let model = this.props.model;\n    let formUI = model[0].Attributes.map(m => {\n      let type = m.Type || \"text\";\n      let props = m.props || {};\n      let name = m.Name;\n      let value = m.Value;\n      ActionDisplay = model[0].ActionDisplay;\n      let input = (\n        <input\n          {...props}\n          className=\"form-input\"\n          type={type}\n          name={name}\n          value={value}\n        />\n      );\n\n      if (type == \"radio\") {\n        input = m.Options.map(o => {\n          return (\n            <React.Fragment >\n              <input\n                {...props}\n                className=\"form-input\"\n                type={type}\n                name={name}\n                value={o.Value}\n              />\n              <label>{o.DisplayValue}</label>\n            </React.Fragment>\n          );\n        });\n        input = <div className=\"form-group-radio\">{input}</div>;\n      }\n\n      if (type == \"select\") {\n        input = m.DropdownValues.map(o => {\n          let checked = o.Value == value;\n          //console.log(\"select: \", o.value, value);\n          return (\n            <option\n              {...props}\n              className=\"form-input\"\n              value={o.Value}\n            >\n              {o.DisplayValue}\n            </option>\n          );\n        });\n\n        //console.log(\"Select default: \", value);\n        input = (\n          <select\n            value={value}\n          >\n            {input}\n          </select>\n        );\n      }\n\n      if (type == \"checkbox\") {\n        input = m.Options.map(o => {\n          //let checked = o.Value == value;\n          let checked = false;\n          if (value && value.length > 0) {\n            checked = value.indexOf(o.Value) > -1 ? true : false;\n          }\n          //console.log(\"Checkbox: \", checked);\n          return (\n            <React.Fragment >\n              <input\n                {...props}\n                className=\"form-input\"\n                type={type}\n                name={o.Name}\n                checked={checked}\n                value={o.Value}\n                ActionzDisplay\n              />\n              <label >{o.DisplayValue}</label>\n            </React.Fragment>\n          );\n        });\n\n        input = <div className=\"form-group-checkbox\">{input}</div>;\n      }\n\n      return (\n        <div  className=\"form-group\">\n          <label className=\"form-label\" >\n            {m.Name}\n          </label>\n          {input}\n        </div>\n      );\n    });\n    return formUI;\n  };\n\n  render() {\n    let title = \"Dynamic Webpage\";\n\n    return (\n      <div className=\"Form_Layout\">\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          <Grid item xs={12}>\n            <div className={this.props.className}>\n        <h3 className=\"form-title\">{title}</h3>\n        <form\n          className=\"dynamic-form\"\n        >\n          {this.renderForm()}\n          <div className=\"form-actions\">\n                  <button type=\"submit\">{ActionDisplay}</button>\n          </div>\n        </form>\n          </div>\n          </Grid>   \n        </Grid>\n      </div>\n    );\n  }\n}\n",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":3,"nodeType":"45","messageId":"46","endLine":11,"endColumn":4},{"ruleId":"47","severity":1,"message":"48","line":31,"column":16,"nodeType":"49","messageId":"50","endLine":31,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":49,"column":16,"nodeType":"49","messageId":"50","endLine":49,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":51,"column":15,"nodeType":"53","messageId":"54","endLine":51,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":51,"column":33,"nodeType":"49","messageId":"50","endLine":51,"endColumn":35},{"ruleId":"47","severity":1,"message":"48","line":74,"column":16,"nodeType":"49","messageId":"50","endLine":74,"endColumn":18},{"ruleId":"39","replacedBy":"55"},{"ruleId":"41","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'checked' is assigned a value but never used.","Identifier","unusedVar",["57"],["58"],"no-global-assign","no-unsafe-negation"]